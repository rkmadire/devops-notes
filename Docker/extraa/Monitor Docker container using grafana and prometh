Monitor Docker container using grafana and prometheous
-------------------------------------------------------
step1: Install grafana 
	- install grafana zip file and extract it 
	 # wget https://dl.grafana.com/enterprise/release/grafana-enterprise-10.2.3.linux-amd64.tar.gz
	 # tar -zxvf grafana-enterprise-10.2.3.linux-amd64.tar.gz

step2: Install Prometheous
	- install prometheous zip file and extract it 
	 # https://github.com/prometheus/prometheus/releases/download/v2.48.1/prometheus-2.48.1.linux-amd64.tar.gz
	 # tar xvzf prometheus-2.48.1.linux-amd64.tar.gz

step3: start grafana server
	- cd grafana-v10.2.3/bin/
	- ./grafana-server

step4: connect grafana server
	- http://localhost:3000/login

step5: Login to grafana server
	- default username: admin
	  default password: admin

step6: Edit daemon.json 
	- vi /etc/docker/daemon.json
		----------------------
		{
			"metrics-addr": "0.0.0.0:9323",
			"experimental": true
		}
		------------------------

step7: restart docker 
	- sudo service docker restart

step8: Edit prometheus.yml
	- cd prometheus-2.48.1.linux-amd64/
	- vi prometheus.yml
		----------------------------
		static_configs:
		  - targets: ["localhost:9323"]
		-------------------------------


step9: start and connect prometheus server 
	- ./prometheus
	- connect prometheus server: http://localhost:9090/

step10: connect prometheus endpoint service 
	- http://localhost:9323/metrics

step11: Integrate prometheus endpoint service 
	- Goto grafana dashboard 
	- Add prometheus data source
	- Enter the url in which prometheus server is running 
	- After entering the url then click save and test 

step12: create a Dashboard 
	- create a new dashboard using prometheus as data source
	- In the prometheus endpoint service there you will find many promQL queries, copy one of the query and use it to create a dashboard 
	- for e.g use this query to check number docker container in stop state : egine_daemon_container_states_containers{state="stopped"}

