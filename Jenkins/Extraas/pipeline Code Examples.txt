Sample Codes Examples To Practice

1. MASTER AND SLAVE ON DECLARATIVE-PIPELINE
    --------------------------------------------------------------------
    pipeline{
        agent none
        stages{
            stage('dowload'){
                agent{
                    label 'built-in'
                }
                steps{
                   script{
                       git 'https://github.com/thej950/maven.git'
                   }
                }
            }
            stage('build'){
                agent{
                    label 'built-in'
                }
                steps{
                    script{
                        sh 'mvn package'
                    }
                }
            }
            stage('deploy'){
                agent{
                    label 'built-in'
                }
                steps{
                    script{
                        sh '''scp /var/lib/jenkins/workspace/job1/webapp/target/webapp.war ubuntu@172.31.26.240:/var/lib/tomcat9/webapps/test.war'''
                    }
                }
            }
            stage('testcode'){
                agent{
                    label 'slave'
                }
                steps{
                    script{
                        git 'https://github.com/thej950/FunctionalTesting.git'
                        sh 'java -jar /home/ubuntu/work/workspace/job1/testing.jar'
                    }
                }
            }
            stage('deliverycode'){
                agent{
                    label 'built-in'
                }
                steps{
                    script{
                        sh '''scp /var/lib/jenkins/workspace/job1/webapp/target/webapp.war ubuntu@172.31.19.114:/var/lib/tomcat9/webapps/prod.war'''
                    }
                }
            }
            
        }
    }
    ---------------------------------------

2. Push Docker image into ECR using Date and time and build Numbers
    ------------------------------------------
    pipeline{
        agent any
        
         environment {
            APP_NAME = "myapp"
            ECR_REGISTRY = "115498080659.dkr.ecr.us-east-1.amazonaws.com"
            ECR_REPOSITORY = "thej"
            IMAGE_NAME = "${APP_NAME}"
            BUILD_VERSION = getVersion()
        }
        

        stages{
            stage("Clear Workspace"){
                steps{
                    cleanWs()
                }
            }
            stage("Download Code"){
                steps{
                    git 'https://github.com/thej950/project-1.git'
                }
            }
            stage("Test Application"){
                steps{
                        sh 'mvn test'
                }
            }
            stage("Build Application Code"){
                steps{
                    sh 'mvn package'
                }
            }
            stage("Build Docker image"){
                steps{
                     sh "docker build -t $APP_NAME:$BUILD_VERSION ."
                }
            }
            stage("Push Docker image To ECR"){
                steps{
                    script{
                        sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${ECR_REGISTRY}"
                        sh "docker tag $APP_NAME:$BUILD_VERSION $ECR_REGISTRY/$ECR_REPOSITORY:$BUILD_VERSION"
                        sh "docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BUILD_VERSION"
                    }
                }
            }
        }
    }
    def getVersion() {
        def currentDate = new Date().format('yyyyMMdd')
        def buildNumber = env.BUILD_NUMBER ?: '0'
        return "1.0.${currentDate}-${buildNumber}"
    }

    -------------------------------------------------------------------------------------





