POLL SCM and WEBHOOK
POLL SCM:
----------
  - Poll scm will verify git repository every time (based on setting periodic time) in that time if any new commit appears then automatically it will poll scm trigger to build pipeline 
  - here jenkins will take some load because evertime checking to github repository 
  - here You set a polling schedule in a cron-like format (e.g., `H/5 * * * *` to check every 5 minutes).
  - it is simple to setup 
  - it Can cause unnecessary load on the SCM server if polling too frequently.
  - Theres some delay between whene changes occures 

steps 
-----
  - open job configure-->goto general-->go to build triggers-->select POLL SCM
  - when we give credential into the POLL SCM 
    
    MINUTE  HOUR    DOM   MONTH   DOW
      *      *       *       *     *     
    
  - note:star represent repitavely


WEBHOOK:
-----------
  - Webhook it is method it is configured in Github repository to send HTTP POST request to the CI/CD tool when a specific event occures like PUSH or Commit 
  - it will trigger pipeline job immediately 
  - Using webhook used to send request to CICD tool to trigger job wnenever a new commit or Push occures  
  - Immediate triggering of the pipeline upon changes.
  - More efficient as it eliminates the need for periodic polling.


Comparison Table
--------------------

| **Feature**         | **POLL SCM**                     | **Webhook**                      |
|----------------------|-----------------------------------|-----------------------------------|
| **Trigger Method**   | CI/CD tool checks the SCM.       | SCM pushes notification to CI/CD.|
| **Delay**            | Dependent on polling frequency.  | Immediate.                       |
| **Efficiency**       | Less efficient (periodic checks).| Highly efficient (event-driven). |
| **Setup Complexity** | Easier to configure.             | Requires webhook setup on SCM.   |
| **Load on SCM**      | Higher (due to frequent polling).| Lower (event-driven).            |

---

When to Use Each
-----------------
- POLL SCM: Use when webhook support is not available or feasible.
- Webhook: Use for real-time, efficient triggering, especially in high-traffic repositories.


======================================================================================================

steps to configure webhook
-----------------------------
1.goto github-->open one project like "maven"-->open settings-->webhooks-->add webhook-->asking credential of github

2.here display webhook information in the playLoad URL give jenkins http://jenkins_public_ip:8080/github-webhook/
  -->content type-->select json 
  -->click on add webhook

3.Now goto Jenkins web page -->goto project -->configure-->goto general-->goto build trigger-->select Github hook trigger for GITScm polling 
  -->click on save 

4.now here my jenkins never go into check the remote repository whenever code changes in the git repository
  git will send a notification to the jenkins to build the job and based on that notification 
  jenkins trigger the CI and CD 


============================================
Q/A
----

### **1. Scenario: Polling Frequency**
You have configured a Jenkins job to use POLL SCM to monitor a Git repository. If you set the polling schedule to `H/10 * * * *`, what does it mean?

**Options:**
A. Jenkins will check the repository every 10 minutes.  
B. Jenkins will check the repository 10 times every hour.  
C. Jenkins will check the repository every hour.  
D. Jenkins will check the repository at exactly 10:00 every day.  

**Correct Answer:** A. Jenkins will check the repository every 10 minutes.

---

### **2. Scenario: Webhook Trigger**
Youâ€™ve set up a webhook for your Git repository. A developer commits and pushes a change to the repository. What happens next?

**Options:**
A. Jenkins waits until the next scheduled poll to detect the changes.  
B. Jenkins receives an HTTP POST request and triggers the job immediately.  
C. Jenkins ignores the changes until the next manual job run.  
D. Jenkins sends an HTTP GET request to the repository to confirm the changes.  

**Correct Answer:** B. Jenkins receives an HTTP POST request and triggers the job immediately.

---

### **3. Scenario: Efficient CI/CD Trigger**
Your team has a repository with frequent commits and pushes throughout the day. Which trigger mechanism is more efficient for your Jenkins pipeline?

**Options:**
A. POLL SCM with a 1-minute polling frequency.  
B. POLL SCM with a 10-minute polling frequency.  
C. Webhook configured on the repository.  
D. Manual triggering by the developers.  

**Correct Answer:** C. Webhook configured on the repository.

---

### **4. Scenario: Repository Connectivity**
You are setting up Jenkins for a client whose Git repository is hosted on a private server without webhook support. How can you ensure that Jenkins triggers pipelines automatically when changes are made?

**Options:**
A. Use POLL SCM to periodically check the repository for changes.  
B. Configure a webhook to notify Jenkins of changes.  
C. Schedule a cron job on the Git server to notify Jenkins.  
D. Manually run the Jenkins job after every commit.  

**Correct Answer:** A. Use POLL SCM to periodically check the repository for changes.

---

### **5. Scenario: Troubleshooting Webhook**
A Jenkins job configured with a webhook is not triggering as expected. What is the most likely cause?

**Options:**
A. The repository URL in Jenkins is incorrect.  
B. The webhook is not properly configured or the webhook URL is incorrect.  
C. The polling frequency is too low.  
D. Jenkins has disabled POLL SCM.  

**Correct Answer:** B. The webhook is not properly configured or the webhook URL is incorrect.

---

### **6. Scenario: SCM Server Load**
Your company uses POLL SCM for all Jenkins jobs. The polling frequency is set to every 1 minute for all jobs, leading to performance issues on the SCM server. What can you do to optimize the setup?

**Options:**
A. Increase the polling frequency to every 5 or 10 minutes.  
B. Replace POLL SCM with webhook triggers.  
C. Combine POLL SCM with manual job triggers.  
D. Use POLL SCM only during off-peak hours.  

**Correct Answer:** B. Replace POLL SCM with webhook triggers.

---

### **7. Scenario: Mixed Trigger Requirements**
A Jenkins pipeline must monitor two repositories: one supports webhooks and the other does not. How should you configure the pipeline triggers?

**Options:**
A. Use POLL SCM for both repositories.  
B. Use webhook for both repositories.  
C. Use webhook for the supported repository and POLL SCM for the unsupported one.  
D. Use manual triggers for both repositories.  

**Correct Answer:** C. Use webhook for the supported repository and POLL SCM for the unsupported one.

---

### **8. Scenario: Network Restrictions**
Your Jenkins server is behind a firewall, and external SCM servers cannot reach it. What is the best triggering method to use?

**Options:**
A. Webhook, as it requires minimal setup.  
B. POLL SCM, as it does not require incoming connections.  
C. Schedule manual builds after each commit.  
D. Use an intermediary tool to forward webhook requests.  

**Correct Answer:** B. POLL SCM, as it does not require incoming connections.
