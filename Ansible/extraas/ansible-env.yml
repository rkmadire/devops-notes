---
- name: Install or Remove Java, Jenkins, kubectl, Docker, and configure Jenkins user
  hosts: localhost
  become: yes
  connection: local
  vars:
    state: present  # default if not passed from CLI

  tasks:

  - name: Ensure /etc/apt/keyrings directory exists
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'
    when: state == "present"

  - name: Download Jenkins GPG key
    get_url:
      url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
      dest: /etc/apt/keyrings/jenkins-keyring.asc
      mode: '0644'
    when: state == "present"

  - name: Add Jenkins APT repository
    copy:
      dest: /etc/apt/sources.list.d/jenkins.list
      content: |
        deb [signed-by=/etc/apt/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/
      mode: '0644'
    when: state == "present"

  - name: Remove Jenkins APT repository
    file:
      path: /etc/apt/sources.list.d/jenkins.list
      state: absent
    when: state == "absent"

  - name: Update APT cache
    apt:
      update_cache: yes

  - name: Install or remove Java, Jenkins, curl
    apt:
      name:
        - openjdk-17-jdk
        - curl
        - jenkins
      state: "{{ state }}"

  - name: Download latest stable kubectl
    shell: |
      curl -LO "https://dl.k8s.io/release/$(curl -Ls https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    args:
      chdir: /tmp
      creates: /tmp/kubectl
    when: state == "present"

  - name: Install kubectl to /usr/local/bin
    copy:
      src: /tmp/kubectl
      dest: /usr/local/bin/kubectl
      mode: '0755'
      owner: root
      group: root
    when: state == "present"

  - name: Remove kubectl binary
    file:
      path: /usr/local/bin/kubectl
      state: absent
    when: state == "absent"

  - name: Download Docker install script
    get_url:
      url: https://get.docker.com
      dest: /tmp/install-docker.sh
      mode: '0755'
    when: state == "present"

  - name: Run Docker install script
    command: sh /tmp/install-docker.sh
    args:
      creates: /usr/bin/docker
    when: state == "present"

  - name: Remove Docker packages
    apt:
      name: docker-ce
      state: absent
    when: state == "absent"

  - name: Add jenkins user to docker group
    user:
      name: jenkins
      groups: docker
      append: yes
    when: state == "present"

  - name: Remove jenkins user from docker group (manual intervention may be needed)
    shell: gpasswd -d jenkins docker || true
    when: state == "absent"

  - name: Message for relogin needed
    debug:
      msg: "If you changed groups, you may need to restart Jenkins or re-login to apply permissions."
    when: state == "present"

## ansible-playbook setup-devops-env.yml -e state=present   # to install
## ansible-playbook setup-devops-env.yml -e state=absent    # to uninstall
 






